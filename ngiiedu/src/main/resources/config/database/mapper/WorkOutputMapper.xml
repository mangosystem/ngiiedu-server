<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.go.ngii.edu.main.courses.work.mapper.WorkOutputMapper">

	<resultMap type="kr.go.ngii.edu.main.courses.work.model.WorkOutput" id="workOutputMap">
		<id property="idx" column="idx" />
		<result property="courseWorkSubId" column="course_work_sub_id" />
		<result property="outputTeamId" column="output_team_id" />
		<result property="outputUserid" column="output_userid" />
		<result property="outputDivision" column="output_division" />
		<result property="pinogioOutputId" column="pinogio_output_id" />
		<result property="outputType" column="output_type" />
		<result property="isShared" column="is_shared" />
		<result property="isDone" column="is_done" />
	</resultMap>
	
	<insert id="create" parameterType="map">
		<selectKey keyProperty="idx" resultType="int" order="BEFORE">
			SELECT nextval('works_output_idx_seq'::regclass)
		</selectKey>
		INSERT INTO works_output (
			idx,
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
		) VALUES (
			#{idx},
			#{courseWorkSubId},
			#{outputTeamId},
			#{outputUserid},
			#{outputDivision},
			#{pinogioOutputId},
			#{outputType},
			#{isShared},
			#{isDone}
		)
	</insert>
	
	<select id="list" parameterType="map" resultMap="workOutputMap">
		SELECT 
			idx, 
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
  		FROM works_output
		WHERE course_work_sub_id = #{courseWorkSubId}
		ORDER BY idx
	</select>
	
	<select id="getGalleryList" parameterType="map" resultMap="workOutputMap">
		SELECT 
			idx, 
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
  		FROM works_output
  		WHERE is_shared = true
  			AND output_type != 'dataset'
  			AND output_type != 'maps'
		ORDER BY idx
  			<if test="offset != null and limit != null">
				OFFSET ${offset} LIMIT ${limit}
			</if>
	</select>
	
	<select id="getList" parameterType="map" resultMap="workOutputMap">
		SELECT 
			idx, 
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
  		FROM works_output
  			<if test="courseWorkSubId != null or courseWorkSubId != 0 ">
				WHERE course_work_sub_id = #{courseWorkSubId}
			</if>
		ORDER BY idx
	</select>
	

	<select id="get" parameterType="map" resultMap="workOutputMap">
		SELECT
			idx, 
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
		FROM works_output
		<where>
			<if test="idx != null">
				idx = #{idx}
			</if>
			<if test="pinogioOutputId != null">
				pinogio_output_id = #{pinogioOutputId}
			</if>
		</where>
		ORDER BY idx
	</select>
	
	<select id="getInfo" parameterType="map" resultMap="workOutputMap">
		SELECT
			idx, 
			course_work_sub_id, 
			output_team_id, 
			output_userid, 
			output_division,
			pinogio_output_id,
			output_type,
			is_shared,
			is_done
		FROM works_output
		WHERE idx = #{idx}
		ORDER BY idx
	</select>
	
	<update id="modify" parameterType="map">
		UPDATE works_output
			pinogio_output_id = #{pinogioOutputId}
		WHERE
			idx = #{idx} 
	</update>
	
	<update id="modifyStatus" parameterType="map">
		UPDATE works_output
		<set>
			<if test="isShared !=null">
				is_shared = #{isShared},
			</if>
			<if test="isDone !=null">
				is_done =  #{isDone}
			</if>
		</set>
		WHERE pinogio_output_id = #{pinogioOutputId}
	</update>
	
	
	<delete id="delete" parameterType="map">
		DELETE FROM works_output
		<where>
			idx = #{idx}
		</where>
	</delete>
	
	<select id="getItemByCourseWorkId" parameterType="map" resultMap="workOutputMap">
		SELECT 
			idx, 
			course_work_sub_id, 
			output_division, 
			pinogio_output_id,
			output_team_id, 
			output_userid, 
			output_type,
			is_shared,
			is_done
		FROM 
			works_output
		WHERE
			course_work_sub_id in (
				SELECT 
					idx 
				FROM 
					courses_work_sub
				WHERE 
					course_work_id in (
						SELECT 
							idx 
						FROM 
							courses_work
						WHERE course_id = (
							SELECT 
								course_id 
							FROM 
								courses_work
							WHERE idx = #{courseWorkId}
							limit 1
						)
					)
			) 
			--and output_type = 'dataset'
		ORDER BY idx 
	</select>
	
	<select id="exists" parameterType="map" resultType="boolean">
		SELECT
			CASE WHEN EXISTS (
				SELECT
					idx
				FROM works_output
				WHERE idx = #{idx}
			)  THEN true ELSE false END
	</select>
</mapper>
