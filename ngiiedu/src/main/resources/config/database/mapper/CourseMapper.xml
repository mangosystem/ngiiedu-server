<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.go.ngii.edu.main.courses.course.mapper.CourseMapper">

	<resultMap type="kr.go.ngii.edu.main.courses.course.model.Course" id="courseMap">
		<id property="idx" column="idx" />
		<result property="moduleId" column="module_id" />
		<result property="courseName" column="course_name" />
		<result property="courseMetadata" column="course_metadata" />
		<result property="courseCreateId" column="course_create_id" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
	</resultMap>
	
	<resultMap type="kr.go.ngii.edu.main.courses.course.model.CourseDetail" id="courseDetailMap">
		<id property="idx" column="idx" />
		<result property="moduleId" column="module_id" />
		<result property="moduleName" column="module_name" />
		<result property="moduleMetadata" column="module_metadata" />
		<result property="courseName" column="course_name" />
		<result property="courseMetadata" column="course_metadata" />
		<result property="courseCreateId" column="course_create_id" />
		<result property="courseCreateUserId" column="course_create_userid" />
		<result property="userDivision" column="user_division" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
		<result property="userId" column="user_id" />
		<result property="status" column="status" />
	</resultMap>
	
	<!-- 사용자별 내가 만든 수업목록 -->
	<select id="listOwn" parameterType="map" resultMap="courseMap">
		SELECT
			idx,
			module_id,
			course_name,
			course_metadata,
			course_create_id,
			create_date,
			modify_date
		FROM courses
		WHERE 
			course_create_id = #{value}
		<if test="offset != null and limit != null">
			OFFSET ${offset} LIMIT ${limit}
		</if>
	</select>
	
	<!-- 사용자별 내가 참여하는 수업목록 -->
	<select id="listJoin" parameterType="map" resultMap="courseMap">
		SELECT
			idx,
			module_id,
			course_name,
			course_metadata,
			course_create_id,
			create_date,
			modify_date
		FROM courses
		WHERE 
			course_create_id = #{value}
		<if test="offset != null and limit != null">
			OFFSET ${offset} LIMIT ${limit}
		</if>
	</select>
	
	<!-- 전체수업 목록 -->
	<select id="list" parameterType="map" resultMap="courseMap">
		SELECT
			idx,
			module_id,
			course_name,
			course_metadata,
			course_create_id,
			create_date,
			modify_date
		FROM courses
		<if test="offset != null and limit != null">
			OFFSET ${offset} LIMIT ${limit}
		</if>
	</select>
	
	<!-- 전체수업 자세한 목록 -->
	<select id="courseDetailList" parameterType="map" resultMap="courseDetailMap">
		SELECT 
			idx, 
			module_id, 
			module_name, 
			module_metadata, 
			course_name, 
			course_metadata, 
       		course_create_id, 
       		userid as course_create_userid, 
       		user_division, 
       		create_date, 
       		modify_date
  		FROM public.courses_detail
  		<where>
			<if test="keyword != '' and keyword != null">
				module_name like #{keyword} or 
				course_name like #{keyword} or
				userid like #{keyword}
			</if>
		</where>
		<if test="offset != null and limit != null">
			OFFSET ${offset} LIMIT ${limit}
		</if>
	</select>
	
	<!-- 사용자별 참여한 수업목록 -->
	<select id="courseDetailListByUserId" parameterType="map" resultMap="courseDetailMap">
		SELECT
		    tb1.idx,
		    tb1.module_id,
		    tb1.module_name,
		    tb1.module_metadata,
		    tb1.course_name,
		    tb1.course_metadata,
		    tb1.course_create_id,
		    tb1.userid as course_create_userid,
		    tb1.user_division,
		    tb1.create_date,
		    tb1.modify_date,
		    tb2.user_id,
		    tb2.status
		FROM courses_detail tb1 left join courses_member tb2
		    ON tb1.idx = tb2.course_id
		WHERE tb2.user_id = ${userId}
		<if test="keyword != '' and keyword != null">
				and (
				module_name like #{keyword} or 
				course_name like #{keyword} or
				userid like #{keyword} )
			</if>
		<if test="offset != null and limit != null">
			OFFSET ${offset} LIMIT ${limit}
		</if>
	</select>

	<select id="get" parameterType="map" resultMap="courseMap">
		SELECT
			idx,
			module_id,
			course_name,
			course_metadata,
			course_create_id,
			create_date,
			modify_date
		FROM courses
		WHERE idx = #{idx}
	</select>
	
	<!-- 수업 추가하기 -->
	<insert id="create" parameterType="map">
		<selectKey keyProperty="idx" resultType="int" order="BEFORE">
			SELECT nextval('courses_idx_seq'::regclass)
		</selectKey>
		INSERT INTO courses (
			idx,
			module_id,
			course_name,
			course_metadata,
			course_create_id,
			create_date,
			modify_date
		) VALUES (
			#{idx},
			#{moduleId},
			#{courseName},
			#{courseMetadata},
			#{courseCreateId},
			#{createDate},
			#{modifyDate}
		)
	</insert>

</mapper>
