<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.go.ngii.edu.main.courses.course.mapper.CourseMemberMapper">

	<resultMap type="kr.go.ngii.edu.main.courses.course.model.CourseMember" id="courseMemberMap">
		<id property="idx" column="idx" />
		<result property="courseId" column="course_id" />
		<result property="userId" column="user_id" />
		<result property="joinStatus" column="join_status" />
		<result property="createDate" column="create_date" />
		<result property="modifyDate" column="modify_date" />
	</resultMap>


	<select id="listByCourseId" parameterType="map" resultMap="courseMemberMap">
		SELECT
			idx,
			course_id,
			user_id,
			join_status,
			create_date,
			modify_date
		FROM courses_member
		WHERE 
			course_id = #{courseId}
	</select>

	<select id="listByCourseIdAndJoinStatus" parameterType="map" resultMap="courseMemberMap">
		SELECT
			idx,
			course_id,
			user_id,
			join_status,
			create_date,
			modify_date
		FROM courses_member
		WHERE 
			course_id = #{courseId} AND join_status = #{joinStatus}
	</select>

	<select id="get" parameterType="map" resultMap="courseMemberMap">
		SELECT
			idx,
			course_id,
			user_id,
			join_status,
			create_date,
			modify_date
		FROM courses_member
		WHERE 
			course_id = #{courseId} AND user_id = #{userId}
	</select>

	<insert id="create" parameterType="map">
		<selectKey keyProperty="idx" resultType="int" order="BEFORE">
			SELECT nextval('courses_member_idx_seq'::regclass)
		</selectKey>
		INSERT INTO courses_member (
			idx,
			course_id,
			user_id,
			join_status,
			create_date,
			modify_date
		) VALUES (
			#{idx}, 
			#{courseId}, 
			#{userId}, 
			#{joinStatus}, 
			#{createDate}, 
			#{modifyDate}
		)
	</insert>

	<update id="modify" parameterType="map">
		UPDATE courses_member 
		SET 
			join_status = #{joinStatus}, 
			modify_date = #{modifyDate} 
		WHERE 
			course_id = #{courseId} AND user_id = #{userId}
	</update>

	<delete id="deleteByCourseId" parameterType="map">
		DELETE FROM courses_member 
		WHERE 
			course_id = #{courseId}
	</delete>

	<delete id="deleteByCourseIdAndUserId" parameterType="map">
		DELETE FROM courses_member 
		WHERE 
			course_id = #{courseId} AND user_id = #{userId}
	</delete>

	<select id="exists" parameterType="map" resultType="boolean">
		SELECT 
			CASE WHEN EXISTS (
				SELECT idx FROM courses_member
				WHERE course_id = #{courseId} AND user_id = #{userId}
			)  THEN true ELSE false END 
	</select>

</mapper>
