package kr.go.ngii.edu.main.common.code.model;

import java.io.Serializable;

import javax.xml.bind.annotation.XmlRootElement;

/**
 * 코드테이블 모델 클래스.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@XmlRootElement(name = "code")
public class Code implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 고유키. */
	private Integer idx;

	/** 구분. */
	private String division;

	/** 대분류. */
	private String dep1;

	/** 중분류. */
	private String dep2;

	/** 소분류. */
	private String dep3;

	/**
	 * 생성자.
	 */
	public Code() {
	}

	/**
	 * 고유키을 설정합니다..
	 * 
	 * @param idx
	 *            고유키
	 */
	public void setIdx(Integer idx) {
		this.idx = idx;
	}

	/**
	 * 고유키을 가져옵니다..
	 * 
	 * @return 고유키
	 */
	public Integer getIdx() {
		return this.idx;
	}

	/**
	 * 구분을 설정합니다..
	 * 
	 * @param division
	 *            구분
	 */
	public void setDivision(String division) {
		this.division = division;
	}

	/**
	 * 구분을 가져옵니다..
	 * 
	 * @return 구분
	 */
	public String getDivision() {
		return this.division;
	}

	/**
	 * 대분류을 설정합니다..
	 * 
	 * @param dep1
	 *            대분류
	 */
	public void setDep1(String dep1) {
		this.dep1 = dep1;
	}

	/**
	 * 대분류을 가져옵니다..
	 * 
	 * @return 대분류
	 */
	public String getDep1() {
		return this.dep1;
	}

	/**
	 * 중분류을 설정합니다..
	 * 
	 * @param dep2
	 *            중분류
	 */
	public void setDep2(String dep2) {
		this.dep2 = dep2;
	}

	/**
	 * 중분류을 가져옵니다..
	 * 
	 * @return 중분류
	 */
	public String getDep2() {
		return this.dep2;
	}

	/**
	 * 소분류을 설정합니다..
	 * 
	 * @param dep3
	 *            소분류
	 */
	public void setDep3(String dep3) {
		this.dep3 = dep3;
	}

	/**
	 * 소분류을 가져옵니다..
	 * 
	 * @return 소분류
	 */
	public String getDep3() {
		return this.dep3;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((idx == null) ? 0 : idx.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		Code other = (Code) obj;
		if (idx == null) {
			if (other.idx != null) {
				return false;
			}
		} else if (!idx.equals(other.idx)) {
			return false;
		}
		return true;
	}

}
